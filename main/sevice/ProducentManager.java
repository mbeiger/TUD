package main.sevice;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import main.domain.Producent;

public class ProducentManager {
	private String CREATE_TABLE_PRODUCENT = "CREATE TABLE Producent(id_producent integer unique GENERATED BY DEFAULT AS IDENTITY, przedsiebiorstwo varchar(255), znizka integer, kwotazamowienia float)";
	private PreparedStatement addProducentStmt;
	private PreparedStatement deleteAllProducentStmt;
	private PreparedStatement getAllProducentStmt;
	private Conn connectionManager = new Conn();
	private Connection connect;

	private Statement statement;
	
	public ProducentManager(){
		try {
			connect = connectionManager.getConnection();
			statement = connect.createStatement();
			ResultSet rs = connect.getMetaData().getTables(null, null, null,null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Producent".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
				
			}
	
			if (!tableExists){
				statement.executeUpdate(CREATE_TABLE_PRODUCENT);
			}
			
			addProducentStmt = connect.prepareStatement("INSERT INTO Producent (przedsiebiorstwo, znizka, kwotazamowienia) VALUES (?, ?, ?)");
			getAllProducentStmt = connect.prepareStatement("SELECT id_producent, przedsiebiorstwo, znizka, kwotazamowienia FROM Producent");
			deleteAllProducentStmt = connect.prepareStatement("DELETE FROM Producent");
			
		} catch (SQLException ex){
			ex.printStackTrace();
		}
	}
	
	public int addProducent(Producent producent){
		int count = 0;
		try {
			addProducentStmt.setString(1, producent.getPrzedsiebiorstwo());
			addProducentStmt.setInt(2, producent.getZnizka());
			addProducentStmt.setFloat(3, producent.getKwotaZamowienia());
			
			count = addProducentStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	
	public void deleteAllProducentStmt(){
		try {
			deleteAllProducentStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public List<Producent> getAllProducent(){
		List<Producent> prods = new ArrayList<Producent>();
		try {
			ResultSet rs = getAllProducentStmt.executeQuery();
		
			while (rs.next()) {
				Producent prod = new Producent();
				prod.setIdProducent(rs.getInt("id_producent"));
				prod.setPrzedsiebiorstwo(rs.getString("przedsiebiorstwo"));
				prod.setZnizka(rs.getInt("znizka"));
				prod.setKwotaZamowienia(rs.getFloat("kwotazamowienia"));
				prods.add(prod);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return prods;
	}
}
